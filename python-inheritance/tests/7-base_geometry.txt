>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> try:
...     bg.integer_validator("age", 0)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] age must be greater than 0
>>> bg = BaseGeometry()
>>> try:
...     bg.integer_validator("name", "John")
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer
>>> bg = BaseGeometry()
>>> try:
...     bg.integer_validator("distance", -4)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] distance must be greater than 0
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg = BaseGeometry()
>>> bg.integer_validator("width", 89)
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> try:
...     bg.area()
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[Exception] area() is not implemented
>>> bg = BaseGeometry()
>>> bg.integer_validator("height", 42)
>>> bg = BaseGeometry()
>>> try:
...     bg.integer_validator(123, 5)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
>>> bg = BaseGeometry()
>>> try:
...     bg.integer_validator("pi", 3.14)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] pi must be an integer

>>> try:
...     bg.integer_validator("flag", True)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] flag must be an integer
